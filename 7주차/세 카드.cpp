#include <iostream>
#include <vector>
#include <set>
#include <algorithm>
using namespace std;

bool binary_search(const vector<int>& lotto, int target)	//?????? ??÷??? ?? ???? ?????? true?? ??????.
{
	int start = 0, end = lotto.size() - 1;	//???????? ???? ?迭?? ???°, ?????? ?ε????? ????????´?.

	while (start <= end)	//?????? ???????, while ???? ??????. ???° ?ε????? ?????? ?ε??????? ???? ???????????? ??????.
	{
		int mid = (start + end) / 2;	//???? ?ε????? ???????.

		if (lotto[mid] == target) return true;	//???? ??? ???? ?C?? ??? ???? ????? true?? ??????? ??? ????.

		if (lotto[mid] > target)	//???? ??? ???? ??? ?????? ???? ???? ?ε??? ?? -1 ?? end?? ???????.
		{
			end = mid - 1;
		}
		else if (lotto[mid] < target)	//???? ??? ???? ??? ?????? ???? ???? ?ε??? ?? +1 ?? start?? ???????.
		{
			start = mid + 1;
		}
	}
	return false;	//??????? false?? ???????.
}

void sum_three_digit(const vector<int>& card, const vector<int>& lotto, set<int>& answer)  //?????? ????? ???? ?? 3???? ??? ??? ??????? ???
{
	int sum = 0;	//????? ???? ???? ????

	for (int j = 0; j < card.size(); ++j)
	{
		for (int k = 0; k < card.size(); ++k)
		{
			for (int l = 0; l < card.size(); ++l) //?? 3???? ??????? 1,1,1 / 1,1,2 .... ????????? ??????? 3???? ??? ???? ?? ????? ???.
			{
				sum = card[j] + card[k] + card[l];	//3???? ??? ??? ???? ?????.
				if (binary_search(lotto, sum))	//???? ???? ??÷????? ???? ????? ???? set?? ???????.
				{
					answer.insert(sum);
				}
			}
		}
	}
}

int main()
{
	int n, m;	//????? ???? ??÷ ????? ????
	cin >> n >> m;	//???, ??÷??? ???
	vector<int> vecn;	//????? ??? ????? ????
	vector<int> vecm;	//??÷??? ??? ????
	set<int> st;	//??????? ?? ??? ??÷??? ?????? ??

	for (int i = 0; i < n; ++i)
	{
		int a;
		cin >> a;
		vecn.push_back(a);	//????? ??? ???
	}

	for (int i = 0; i < m; ++i)
	{
		int a;
		cin >> a;
		vecm.push_back(a);	//??÷??? ??? ???
	}

	sort(vecm.begin(), vecm.end());	//????????? ??? ???? ???? ????
	sum_three_digit(vecn, vecm, st);	//??????? ????
	for (auto iter = st.begin(); iter != st.end(); ++iter)
	{
		cout << *iter << " ";	//set?? ????? ???? ????????.
	}
}